4c0006f
ff810113
c12023
112223
200293
5622b3
28c63
412083
12603
810113
100513
8067
fff60613
fd1ff0ef
412083
12603
810113
2a60533
8067
700613
fb5ff0ef
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x0 76 <main>
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: jal x0 76 <main>
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: nop
Ex instruction: jal x0 76 <main>
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x1 -76 <factorialRec>
ID instruction: addi x12 x0 7
Ex instruction: nop
Mem instruction: jal x0 76 <main>
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: no instruction ar this address
ID instruction: jal x1 -76 <factorialRec>
Ex instruction: addi x12 x0 7
Mem instruction: nop
WB instruction: jal x0 76 <main>
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -76 <factorialRec>
Mem instruction: addi x12 x0 7
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -76 <factorialRec>
WB instruction: addi x12 x0 7
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -76 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967287**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967291**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967279**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967283**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967271**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967275**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967263**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967267**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967255**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967259**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967247**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967251**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jal x1 -48 <factorialRec>
ID instruction: addi x12 x12 -1
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: jal x1 -48 <factorialRec>
Ex instruction: addi x12 x12 -1
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 -8
ID instruction: nop
Ex instruction: jal x1 -48 <factorialRec>
Mem instruction: addi x12 x12 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: sw x12 0 x2
ID instruction: addi x2 x2 -8
Ex instruction: nop
Mem instruction: jal x1 -48 <factorialRec>
WB instruction: addi x12 x12 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: sw x1 4 x2
ID instruction: sw x12 0 x2
Ex instruction: addi x2 x2 -8
Mem instruction: nop
WB instruction: jal x1 -48 <factorialRec>
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x5 x0 2
ID instruction: sw x1 4 x2
Ex instruction: sw x12 0 x2
Mem instruction: addi x2 x2 -8
WB instruction: nop
IF_ID_Reg.FLushbit: 0
**4294967239**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: slt x5 x12 x5
ID instruction: addi x5 x0 2
Ex instruction: sw x1 4 x2
Mem instruction: sw x12 0 x2
WB instruction: addi x2 x2 -8
IF_ID_Reg.FLushbit: 0
**4294967243**
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: beq x5 x0 24 <anotherCall>
ID instruction: slt x5 x12 x5
Ex instruction: addi x5 x0 2
Mem instruction: sw x1 4 x2
WB instruction: sw x12 0 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: slt x5 x12 x5
Mem instruction: addi x5 x0 2
WB instruction: sw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000010 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 1
IF instruction: lw x1 4 x2
ID instruction: beq x5 x0 24 <anotherCall>
Ex instruction: nop
Mem instruction: slt x5 x12 x5
WB instruction: addi x5 x0 2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: nop
WB instruction: slt x5 x12 x5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x10 x0 1
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: addi x10 x0 1
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111000111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x12 -1
ID instruction: jalr x0 x1 0
Ex instruction: addi x10 x0 1
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: addi x10 x0 1
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: addi x10 x0 1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000001 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111001111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000001 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000010 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111010111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000011 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111011111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000110 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000100 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111100111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000011000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000101 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111101111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000001111000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x1 4 x2
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: lw x12 0 x2
ID instruction: lw x1 4 x2
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x2 x2 8
ID instruction: lw x12 0 x2
Ex instruction: lw x1 4 x2
Mem instruction: nop
WB instruction: jalr x0 x1 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000111000 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: mul x10 x12 x10
ID instruction: addi x2 x2 8
Ex instruction: lw x12 0 x2
Mem instruction: lw x1 4 x2
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000110 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: jalr x0 x1 0
ID instruction: mul x10 x12 x10
Ex instruction: addi x2 x2 8
Mem instruction: lw x12 0 x2
WB instruction: lw x1 4 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111110111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: addi x12 x0 7
ID instruction: jalr x0 x1 0
Ex instruction: mul x10 x12 x10
Mem instruction: addi x2 x2 8
WB instruction: lw x12 0 x2
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000001011010000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: no instruction ar this address
ID instruction: nop
Ex instruction: jalr x0 x1 0
Mem instruction: mul x10 x12 x10
WB instruction: addi x2 x2 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000001010100 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000001 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000001001110110000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000111 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 01010100 
00000000 00000000 00000000 00000111 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000110 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000101 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000100 
00000000 00000000 00000000 00111000 
00000000 00000000 00000000 00000011 
stall: 0
IF instruction: no instruction ar this address
ID instruction: no instruction at this address
Ex instruction: nop
Mem instruction: jalr x0 x1 0
WB instruction: mul x10 x12 x10
IF_ID_Reg.FLushbit: 0
