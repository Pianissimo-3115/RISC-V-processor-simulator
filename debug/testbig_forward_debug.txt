93
113
208f33
e93
200193
1ddf1a63
100093
100113
208f33
200e93
300193
1bdf1e63
300093
700113
208f33
a00e93
400193
1bdf1263
93
ffff8137
208f33
ffff8eb7
500193
19df1663
800000b7
113
208f33
80000eb7
600193
17df1a63
800000b7
ffff8137
208f33
7fff8eb7
700193
15df1e63
93
8137
fff10113
208f33
8eb7
fffe8e93
800193
13df1e63
800000b7
fff08093
113
208f33
80000eb7
fffe8e93
900193
11df1e63
800000b7
fff08093
8137
fff10113
208f33
80008eb7
ffee8e93
a00193
fdf1c63
800000b7
8137
fff10113
208f33
80008eb7
fffe8e93
b00193
ddf1c63
800000b7
fff08093
ffff8137
208f33
7fff8eb7
fffe8e93
c00193
bdf1c63
93
fff00113
208f33
fff00e93
d00193
bdf1063
fff00093
100113
208f33
e93
e00193
9df1463
fff00093
fff00113
208f33
ffe00e93
f00193
7df1863
100093
80000137
fff10113
208f33
80000eb7
1000193
5df1a63
d00093
b00113
2080b3
1800e93
1100193
3d09e63
e00093
b00113
208133
1900e93
1200193
3d11263
d00093
1080b3
1a00e93
1300193
1d09863
2a00513
5d00893
6f
513
5d00893
6f
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 0
ID instruction: nop
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 0
ID instruction: addi x1 x0 0
Ex instruction: nop
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 0
Ex instruction: addi x1 x0 0
Mem instruction: nop
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 0
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 0
Mem instruction: addi x1 x0 0
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 2
ID instruction: addi x29 x0 0
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 0
WB instruction: addi x1 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 468
ID instruction: addi x3 x0 2
Ex instruction: addi x29 x0 0
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 1
ID instruction: bne x30 x29 468
Ex instruction: addi x3 x0 2
Mem instruction: addi x29 x0 0
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 1
ID instruction: addi x1 x0 1
Ex instruction: nop
Mem instruction: addi x3 x0 2
WB instruction: addi x29 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 1
Ex instruction: addi x1 x0 1
Mem instruction: nop
WB instruction: addi x3 x0 2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 2
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 1
Mem instruction: addi x1 x0 1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 3
ID instruction: addi x29 x0 2
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 1
WB instruction: addi x1 x0 1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 444
ID instruction: addi x3 x0 3
Ex instruction: addi x29 x0 2
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 3
ID instruction: bne x30 x29 444
Ex instruction: addi x3 x0 3
Mem instruction: addi x29 x0 2
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 7
ID instruction: addi x1 x0 3
Ex instruction: nop
Mem instruction: addi x3 x0 3
WB instruction: addi x29 x0 2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 7
Ex instruction: addi x1 x0 3
Mem instruction: nop
WB instruction: addi x3 x0 3
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 10
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 7
Mem instruction: addi x1 x0 3
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 4
ID instruction: addi x29 x0 10
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 7
WB instruction: addi x1 x0 3
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000000010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 420
ID instruction: addi x3 x0 4
Ex instruction: addi x29 x0 10
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 7
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 0
ID instruction: bne x30 x29 420
Ex instruction: addi x3 x0 4
Mem instruction: addi x29 x0 10
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0xffff8
ID instruction: addi x1 x0 0
Ex instruction: nop
Mem instruction: addi x3 x0 4
WB instruction: addi x29 x0 10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: lui x2 0xffff8
Ex instruction: addi x1 x0 0
Mem instruction: nop
WB instruction: addi x3 x0 4
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000011 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0xffff8
ID instruction: add x30 x1 x2
Ex instruction: lui x2 0xffff8
Mem instruction: addi x1 x0 0
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000000000000000111 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 5
ID instruction: lui x29 0xffff8
Ex instruction: add x30 x1 x2
Mem instruction: lui x2 0xffff8
WB instruction: addi x1 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 00000000000000000000000000001010 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 396
ID instruction: addi x3 x0 5
Ex instruction: lui x29 0xffff8
Mem instruction: add x30 x1 x2
WB instruction: lui x2 0xffff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000001010 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 396
Ex instruction: addi x3 x0 5
Mem instruction: lui x29 0xffff8
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 0
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 5
WB instruction: lui x29 0xffff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 0
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 5
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x80000
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 0
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 6
ID instruction: lui x29 0x80000
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 0
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 11111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 372
ID instruction: addi x3 x0 6
Ex instruction: lui x29 0x80000
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 372
Ex instruction: addi x3 x0 6
Mem instruction: lui x29 0x80000
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0xffff8
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 6
WB instruction: lui x29 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: lui x2 0xffff8
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 6
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x7fff8
ID instruction: add x30 x1 x2
Ex instruction: lui x2 0xffff8
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 7
ID instruction: lui x29 0x7fff8
Ex instruction: add x30 x1 x2
Mem instruction: lui x2 0xffff8
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 348
ID instruction: addi x3 x0 7
Ex instruction: lui x29 0x7fff8
Mem instruction: add x30 x1 x2
WB instruction: lui x2 0xffff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 0
ID instruction: bne x30 x29 348
Ex instruction: addi x3 x0 7
Mem instruction: lui x29 0x7fff8
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0x8
ID instruction: addi x1 x0 0
Ex instruction: nop
Mem instruction: addi x3 x0 7
WB instruction: lui x29 0x7fff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -1
ID instruction: lui x2 0x8
Ex instruction: addi x1 x0 0
Mem instruction: nop
WB instruction: addi x3 x0 7
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x2 -1
Ex instruction: lui x2 0x8
Mem instruction: addi x1 x0 0
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x8
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x2 -1
Mem instruction: lui x2 0x8
WB instruction: addi x1 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000001000000000000000 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x29 -1
ID instruction: lui x29 0x8
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x2 -1
WB instruction: lui x2 0x8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111111000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 8
ID instruction: addi x29 x29 -1
Ex instruction: lui x29 0x8
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x2 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 316
ID instruction: addi x3 x0 8
Ex instruction: addi x29 x29 -1
Mem instruction: lui x29 0x8
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000001000000000000000 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 316
Ex instruction: addi x3 x0 8
Mem instruction: addi x29 x29 -1
WB instruction: lui x29 0x8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000000111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x1 -1
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 8
WB instruction: addi x29 x29 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 0
ID instruction: addi x1 x1 -1
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 0
Ex instruction: addi x1 x1 -1
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x80000
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 0
Mem instruction: addi x1 x1 -1
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x29 -1
ID instruction: lui x29 0x80000
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 0
WB instruction: addi x1 x1 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 00000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 9
ID instruction: addi x29 x29 -1
Ex instruction: lui x29 0x80000
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 284
ID instruction: addi x3 x0 9
Ex instruction: addi x29 x29 -1
Mem instruction: lui x29 0x80000
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 284
Ex instruction: addi x3 x0 9
Mem instruction: addi x29 x29 -1
WB instruction: lui x29 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x1 -1
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 9
WB instruction: addi x29 x29 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0x8
ID instruction: addi x1 x1 -1
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 9
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -1
ID instruction: lui x2 0x8
Ex instruction: addi x1 x1 -1
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x2 -1
Ex instruction: lui x2 0x8
Mem instruction: addi x1 x1 -1
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000000000000000000 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x80008
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x2 -1
Mem instruction: lui x2 0x8
WB instruction: addi x1 x1 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000001000000000000000 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x29 -2
ID instruction: lui x29 0x80008
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x2 -1
WB instruction: lui x2 0x8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 01111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 10
ID instruction: addi x29 x29 -2
Ex instruction: lui x29 0x80008
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x2 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111111111111111111 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 248
ID instruction: addi x3 x0 10
Ex instruction: addi x29 x29 -2
Mem instruction: lui x29 0x80008
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000001000000000000000 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 248
Ex instruction: addi x3 x0 10
Mem instruction: addi x29 x29 -2
WB instruction: lui x29 0x80008
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0x8
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 10
WB instruction: addi x29 x29 -2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -1
ID instruction: lui x2 0x8
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 10
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x2 -1
Ex instruction: lui x2 0x8
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x80008
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x2 -1
Mem instruction: lui x2 0x8
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000001000000000000000 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x29 -1
ID instruction: lui x29 0x80008
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x2 -1
WB instruction: lui x2 0x8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 11
ID instruction: addi x29 x29 -1
Ex instruction: lui x29 0x80008
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x2 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111110 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 216
ID instruction: addi x3 x0 11
Ex instruction: addi x29 x29 -1
Mem instruction: lui x29 0x80008
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000001000000000000000 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x1 0x80000
ID instruction: bne x30 x29 216
Ex instruction: addi x3 x0 11
Mem instruction: addi x29 x29 -1
WB instruction: lui x29 0x80008
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x1 -1
ID instruction: lui x1 0x80000
Ex instruction: nop
Mem instruction: addi x3 x0 11
WB instruction: addi x29 x29 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0xffff8
ID instruction: addi x1 x1 -1
Ex instruction: lui x1 0x80000
Mem instruction: nop
WB instruction: addi x3 x0 11
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: lui x2 0xffff8
Ex instruction: addi x1 x1 -1
Mem instruction: lui x1 0x80000
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 10000000000000000000000000000000 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x7fff8
ID instruction: add x30 x1 x2
Ex instruction: lui x2 0xffff8
Mem instruction: addi x1 x1 -1
WB instruction: lui x1 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 00000000000000000111111111111111 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x29 -1
ID instruction: lui x29 0x7fff8
Ex instruction: add x30 x1 x2
Mem instruction: lui x2 0xffff8
WB instruction: addi x1 x1 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 10000000000000000111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 12
ID instruction: addi x29 x29 -1
Ex instruction: lui x29 0x7fff8
Mem instruction: add x30 x1 x2
WB instruction: lui x2 0xffff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 184
ID instruction: addi x3 x0 12
Ex instruction: addi x29 x29 -1
Mem instruction: lui x29 0x7fff8
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111111000000000000000 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 0
ID instruction: bne x30 x29 184
Ex instruction: addi x3 x0 12
Mem instruction: addi x29 x29 -1
WB instruction: lui x29 0x7fff8
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 -1
ID instruction: addi x1 x0 0
Ex instruction: nop
Mem instruction: addi x3 x0 12
WB instruction: addi x29 x29 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 -1
Ex instruction: addi x1 x0 0
Mem instruction: nop
WB instruction: addi x3 x0 12
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 01111111111111111111111111111111 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 -1
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 -1
Mem instruction: addi x1 x0 0
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111000000000000000 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 13
ID instruction: addi x29 x0 -1
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 -1
WB instruction: addi x1 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 01111111111111110111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 160
ID instruction: addi x3 x0 13
Ex instruction: addi x29 x0 -1
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 01111111111111110111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 -1
ID instruction: bne x30 x29 160
Ex instruction: addi x3 x0 13
Mem instruction: addi x29 x0 -1
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001100
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 1
ID instruction: addi x1 x0 -1
Ex instruction: nop
Mem instruction: addi x3 x0 13
WB instruction: addi x29 x0 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 1
Ex instruction: addi x1 x0 -1
Mem instruction: nop
WB instruction: addi x3 x0 13
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000000 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 0
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 1
Mem instruction: addi x1 x0 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 14
ID instruction: addi x29 x0 0
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 1
WB instruction: addi x1 x0 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 11111111111111111111111111111111 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 136
ID instruction: addi x3 x0 14
Ex instruction: addi x29 x0 0
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111111 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 -1
ID instruction: bne x30 x29 136
Ex instruction: addi x3 x0 14
Mem instruction: addi x29 x0 0
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001101
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 -1
ID instruction: addi x1 x0 -1
Ex instruction: nop
Mem instruction: addi x3 x0 14
WB instruction: addi x29 x0 0
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x0 -1
Ex instruction: addi x1 x0 -1
Mem instruction: nop
WB instruction: addi x3 x0 14
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 -2
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x0 -1
Mem instruction: addi x1 x0 -1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 00000000000000000000000000000001 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 15
ID instruction: addi x29 x0 -2
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x0 -1
WB instruction: addi x1 x0 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 00000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 112
ID instruction: addi x3 x0 15
Ex instruction: addi x29 x0 -2
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x0 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000000000 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 1
ID instruction: bne x30 x29 112
Ex instruction: addi x3 x0 15
Mem instruction: addi x29 x0 -2
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001110
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x2 0x80000
ID instruction: addi x1 x0 1
Ex instruction: nop
Mem instruction: addi x3 x0 15
WB instruction: addi x29 x0 -2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x2 -1
ID instruction: lui x2 0x80000
Ex instruction: addi x1 x0 1
Mem instruction: nop
WB instruction: addi x3 x0 15
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 11111111111111111111111111111111 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x30 x1 x2
ID instruction: addi x2 x2 -1
Ex instruction: lui x2 0x80000
Mem instruction: addi x1 x0 1
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 11111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: lui x29 0x80000
ID instruction: add x30 x1 x2
Ex instruction: addi x2 x2 -1
Mem instruction: lui x2 0x80000
WB instruction: addi x1 x0 1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 10000000000000000000000000000000 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 16
ID instruction: lui x29 0x80000
Ex instruction: add x30 x1 x2
Mem instruction: addi x2 x2 -1
WB instruction: lui x2 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 11111111111111111111111111111110 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x30 x29 84
ID instruction: addi x3 x0 16
Ex instruction: lui x29 0x80000
Mem instruction: add x30 x1 x2
WB instruction: addi x2 x2 -1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 11111111111111111111111111111110 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 13
ID instruction: bne x30 x29 84
Ex instruction: addi x3 x0 16
Mem instruction: lui x29 0x80000
WB instruction: add x30 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000001111
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 11
ID instruction: addi x1 x0 13
Ex instruction: nop
Mem instruction: addi x3 x0 16
WB instruction: lui x29 0x80000
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x1 x1 x2
ID instruction: addi x2 x0 11
Ex instruction: addi x1 x0 13
Mem instruction: nop
WB instruction: addi x3 x0 16
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000000001 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 24
ID instruction: add x1 x1 x2
Ex instruction: addi x2 x0 11
Mem instruction: addi x1 x0 13
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001101 x2: 01111111111111111111111111111111 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 17
ID instruction: addi x29 x0 24
Ex instruction: add x1 x1 x2
Mem instruction: addi x2 x0 11
WB instruction: addi x1 x0 13
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001101 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x1 x29 60
ID instruction: addi x3 x0 17
Ex instruction: addi x29 x0 24
Mem instruction: add x1 x1 x2
WB instruction: addi x2 x0 11
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011000 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 10000000000000000000000000000000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 14
ID instruction: bne x1 x29 60
Ex instruction: addi x3 x0 17
Mem instruction: addi x29 x0 24
WB instruction: add x1 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011000 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010000
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x2 x0 11
ID instruction: addi x1 x0 14
Ex instruction: nop
Mem instruction: addi x3 x0 17
WB instruction: addi x29 x0 24
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011000 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x2 x1 x2
ID instruction: addi x2 x0 11
Ex instruction: addi x1 x0 14
Mem instruction: nop
WB instruction: addi x3 x0 17
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011000 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 25
ID instruction: add x2 x1 x2
Ex instruction: addi x2 x0 11
Mem instruction: addi x1 x0 14
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 18
ID instruction: addi x29 x0 25
Ex instruction: add x2 x1 x2
Mem instruction: addi x2 x0 11
WB instruction: addi x1 x0 14
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000001011 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x2 x29 36
ID instruction: addi x3 x0 18
Ex instruction: addi x29 x0 25
Mem instruction: add x2 x1 x2
WB instruction: addi x2 x0 11
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011000 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x1 x0 13
ID instruction: bne x2 x29 36
Ex instruction: addi x3 x0 18
Mem instruction: addi x29 x0 25
WB instruction: add x2 x1 x2
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010001
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011001 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: add x1 x1 x1
ID instruction: addi x1 x0 13
Ex instruction: nop
Mem instruction: addi x3 x0 18
WB instruction: addi x29 x0 25
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011001 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x29 x0 26
ID instruction: add x1 x1 x1
Ex instruction: addi x1 x0 13
Mem instruction: nop
WB instruction: addi x3 x0 18
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001110 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011001 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x3 x0 19
ID instruction: addi x29 x0 26
Ex instruction: add x1 x1 x1
Mem instruction: addi x1 x0 13
WB instruction: nop
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000001101 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011001 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: bne x1 x29 16
ID instruction: addi x3 x0 19
Ex instruction: addi x29 x0 26
Mem instruction: add x1 x1 x1
WB instruction: addi x1 x0 13
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011001 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 42
ID instruction: bne x1 x29 16
Ex instruction: addi x3 x0 19
Mem instruction: addi x29 x0 26
WB instruction: add x1 x1 x1
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010010
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x17 x0 93
ID instruction: addi x10 x0 42
Ex instruction: nop
Mem instruction: addi x3 x0 19
WB instruction: addi x29 x0 26
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: addi x17 x0 93
Ex instruction: addi x10 x0 42
Mem instruction: nop
WB instruction: addi x3 x0 19
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000000000 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: addi x17 x0 93
Mem instruction: addi x10 x0 42
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000000000000 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: addi x17 x0 93
WB instruction: addi x10 x0 42
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: addi x17 x0 93
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: addi x10 x0 0
ID instruction: TEST_PASSED
Ex instruction: nop
Mem instruction: TEST_PASSED
WB instruction: nop
IF_ID_Reg.FLushbit: 1
 x0: 00000000000000000000000000000000 x1: 00000000000000000000000000011010 x2: 00000000000000000000000000011001 x3: 00000000000000000000000000010011
 x4: 00000000000000000000000000000000 x5: 00000000000000000000000000000000 x6: 00000000000000000000000000000000 x7: 00000000000000000000000000000000
 x8: 00000000000000000000000000000000 x9: 00000000000000000000000000000000 x10: 00000000000000000000000000101010 x11: 00000000000000000000000000000000
 x12: 00000000000000000000000000000000 x13: 00000000000000000000000000000000 x14: 00000000000000000000000000000000 x15: 00000000000000000000000000000000
 x16: 00000000000000000000000000000000 x17: 00000000000000000000000001011101 x18: 00000000000000000000000000000000 x19: 00000000000000000000000000000000
 x20: 00000000000000000000000000000000 x21: 00000000000000000000000000000000 x22: 00000000000000000000000000000000 x23: 00000000000000000000000000000000
 x24: 00000000000000000000000000000000 x25: 00000000000000000000000000000000 x26: 00000000000000000000000000000000 x27: 00000000000000000000000000000000
 x28: 00000000000000000000000000000000 x29: 00000000000000000000000000011010 x30: 10000000000000000000000000000000 x31: 00000000000000000000000000000000
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 
stall: 0
IF instruction: TEST_PASSED
ID instruction: nop
Ex instruction: TEST_PASSED
Mem instruction: nop
WB instruction: TEST_PASSED
IF_ID_Reg.FLushbit: 0
